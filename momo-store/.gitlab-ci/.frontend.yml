include:
  - template: Security/Container-Scanning.gitlab-ci.yml

stages:
  - security-sast
  - build
  - security-container-scan
  - security-sonar
  - release

semgrep:
  stage: security-sast
  image: gitlab.praktikum-services.ru:5050/std-009-060/momo-store/semgrep:latest
  rules:
  # Scan changed files in MRs, (diff-aware scanning):
  #- if: $CI_MERGE_REQUEST_IID
  # Scan mainline (default) branches and report all findings.
  #- if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

  # See more at semgrep.dev/explore.
  variables:
    SEMGREP_RULES: >-
      p/javascript
      p/nginx
      p/secrets
      p/dockerfile
      p/docker
    SEMGREP_GITLAB_JSON: "1"
    SEMGREP_ENABLE_VERSION_CHECK: "0"
  script: semgrep ci --include=/frontend/* --verbose --gitlab-sast > gl-sast-report.json || true
  artifacts:
    paths:
      - gl-sast-report.json
    expire_in: 1 week

compile_frontend:
  stage: build
  cache:
    - key: npm
      paths:
        - frontend/.npm/
  script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - cd ..
    - mkdir -p $CI_PROJECT_DIR/momo-store-${VERSION}/public_html
    - mv frontend/dist/ $CI_PROJECT_DIR/momo-store-${VERSION}/public_html
  artifacts:
    paths:
      - $CI_PROJECT_DIR/momo-store-${VERSION}/public_html

build_frontend_image:
  stage: build
  image:
    name: gitlab.praktikum-services.ru:5050/std-009-060/momo-store/kaniko-executor:v1.9.1-debug
    entrypoint: [""]
  variables:
    CACHE_TTL: 2190h0m0s # three months
    IMAGE_NAME: momo-frontend
    CONTEXT: "${CI_PROJECT_DIR}/frontend"
  script:
    - >
      /kaniko/executor
      --build-arg VERSION=$VERSION
      --build-arg VUE_APP_API_URL=/api
      --context "${CONTEXT}/"
      --dockerfile "${CONTEXT}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:$VERSION"
      --destination "${CI_REGISTRY_IMAGE}/$IMAGE_NAME:latest"
      --cache=true
      --cache-repo ${CI_REGISTRY_IMAGE}/$IMAGE_NAME
      --cache-ttl $CACHE_TTL

container_scanning:
  stage: security-container-scan
  needs: ["build_frontend_image"]
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE/momo-frontend:$VERSION
    GIT_STRATEGY: fetch
    CS_DOCKERFILE_PATH: frontend/Dockerfile

sonarqube:
  stage: security-sonar
  image: gitlab.praktikum-services.ru:5050/std-009-060/momo-store/sonar-scanner-cli:4.8.0
  allow_failure: true
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectKey=09_YURIBATKOV_MOMO_FRONTEND
      -Dsonar.projectName=09_YURIBATKOV_MOMO_FRONTEND
      -Dsonar.host.url=${SONAR_HOST_URL}
      -Dsonar.login=${SONAR_TOKEN_MOMO_FRONT}

upload_release:
  stage: release
  dependencies:
    - compile_frontend
  script:
    - tar czvf momo-store-${VERSION}.tar.gz momo-store-${VERSION}/public_html/dist
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      --upload-file momo-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/repository/09-momo-store-batkov-yuriy-frontend/momo-store/${VERSION}/momo-store-frontend-${VERSION}.tar.gz
